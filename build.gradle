import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.github.jwharm.flatpak-gradle-generator' version '1.2.0'
}

group = 'com.toxicstoxm'
version = '0.1.4'
var mainClass = group + "." + name + ".LEDSuite"

repositories {
    maven { url './offline-repository/' }
    mavenCentral()
}

dependencies {
    implementation 'org.fusesource.jansi:jansi:2.4.1'
    implementation 'io.github.jwharm.javagi:adw:0.10.2'
    implementation 'org.apache.commons:commons-configuration2:2.11.0'
    implementation 'org.yaml:snakeyaml:2.3'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    implementation 'info.picocli:picocli:4.7.6'
    annotationProcessor 'info.picocli:picocli:4.7.6'
}

// copy the Constants class and replace the version placeholder with the application version
tasks.register("processVersion", Copy) {
    from("src/main/java/com/toxicstoxm/LEDSuite/") {
        include("Constants.java")
        filter(ReplaceTokens, tokens: ['version': version])
    }
    into layout.buildDirectory.dir("generated/sources/classes/src/java/main/com/toxicstoxm/LEDSuite/")

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.flatpakGradleGenerator {
    outputFile = file('flatpak-sources.json')
    downloadDirectory = './offline-repository'
}

// exclude the original Constants class from the source set so gradle doesn't compile it in
sourceSets {
    main {
        java {
            exclude ("com/toxicstoxm/LEDSuite/Constants.java")
        }
    }
}

// include the new Constants class that was previously generated
tasks.named("compileJava", JavaCompile) {
    dependsOn("processVersion")
    source(layout.buildDirectory.dir("generated/sources/classes/src/java/main/com/toxicstoxm/LEDSuite/"))
}

shadowJar {
    archiveClassifier.set('final')
}

tasks.jar {
    manifest {
        attributes["Main-Class"] = mainClass;
    }
    dependsOn("shadowJar")
}
